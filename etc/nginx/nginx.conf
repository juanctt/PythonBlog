# include extra/blacklisted_urls;

map $http_origin $cors_header {
    default "";
    "~^https?://(localhost|(.*\.)?headup\.space)" "$http_origin";
}

map $http_upgrade $connection_upgrade {
	default upgrade;
	''      close;
}

# HTTP config (redirect to HTTPS)
server {
	listen 80 default_server;
	server_name headup.space es.headup.space fr.headup.space ja.headup.space cn.headup.space;
	access_log off;
	error_log off;
	return 301 https://$host$request_uri;
}

# HTPS config (old url)
server {
	listen 80;
	server_name www.headup.space;
	access_log off;
	error_log off;
	return 301 https://$server_name$request_uri;
}

# HTPS config
server {
	# the port your site will be served on
	# listen 					80 default_server;
	listen                  443 default_server ssl;

	ssl_certificate         /etc/ssl/headup/ssl_certificate.pem;
	ssl_certificate_key     /etc/ssl/headup/ssl_certificate.key;

	# the domain name it will serve for
	server_name headup.space es.headup.space fr.headup.space ja.headup.space cn.headup.space pt.headup.space;
	charset     utf-8;
	# max upload size
	client_max_body_size 75M;   # adjust to taste

	# uncomment following line if needed
    # include extra/blackhole;

	include extra/gzip_params.default;

	# include extra locations & rewrites
	# include extra/headup_prd;

    location /status {
		add_header "Content-Type" "text/plain charset=UTF-8";
		return 200 'OK';
	}


	# https://www.nginx.com/blog/websocket-nginx/
	location /socket.io {
		include proxy_params_wss;
		proxy_pass http://127.0.0.1:5002/socket.io;
		proxy_redirect off;
		proxy_buffering off;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "Upgrade";
	}

	location / {
		include proxy_params;

		add_header "Access-Control-Allow-Origin" $cors_header always;
		add_header "Access-Control-Allow-Credentials" "true" always;
		add_header "Access-Control-Allow-Methods" "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
		add_header "Access-Control-Allow-Headers" "Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,X-CSRF-Token,X-CSRFToken,X-Auth-Token" always;

		# OPTIONS (pre-flight) request from allowed
		if ($request_method = "OPTIONS") {
			add_header "Access-Control-Max-Age" 1728000;
			add_header "Content-Type" "text/plain charset=UTF-8";
			add_header "Content-Length" 0;
			return 204;
		}

		proxy_pass        http://127.0.0.1:5002;
		proxy_cookie_domain ~\.([a-z]+\.[a-z]+)$ $host;
		proxy_cookie_path / "/; SameSite=None; Secure;";
	}
}
